<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <FontFamily x:Key="GlobalFontFamily">Segoe UI</FontFamily>
    <system:Double x:Key="GlobalFontSize">12</system:Double>
    <system:Double x:Key="TaskbarHeight">24</system:Double>
    <system:Boolean x:Key="InvertSystemNotifyIcons">False</system:Boolean>

    <SolidColorBrush x:Key="ButtonShadow" Color="#000000" />
    <SolidColorBrush x:Key="ButtonBorder" Color="#000000" />
    <SolidColorBrush x:Key="ButtonLight" Color="#000000" />
    <SolidColorBrush x:Key="ButtonFace" Color="#000000" />

    <SolidColorBrush x:Key="ButtonInactiveBorder" Color="#000000" />
    <SolidColorBrush x:Key="ButtonActiveBorder" Color="#0077DD" />
    <SolidColorBrush x:Key="ButtonActiveBackground" Color="#000000" />
    <SolidColorBrush x:Key="ButtonHoverBorder" Color="#222222" />
    <SolidColorBrush x:Key="ButtonHoverBackground" Color="#222222" />
    <SolidColorBrush x:Key="ButtonPressedBorder" Color="#181818" />
    <SolidColorBrush x:Key="ButtonPressedBackground" Color="#181818" />
    <SolidColorBrush x:Key="ButtonFlashingBorder" Color="#DD7700" />
    <SolidColorBrush x:Key="ButtonFlashingBackground" Color="#442200" />

    <SolidColorBrush x:Key="TrayBorder" Color="#000000" />
    <SolidColorBrush x:Key="TrayInnerBorder" Color="#000000" />
    <SolidColorBrush x:Key="TrayBackground" Color="#000000" />

    <SolidColorBrush x:Key="StartButtonBackground" Color="#000000" />
    <SolidColorBrush x:Key="StartButtonHoverBorder" Color="#222222" />
    <SolidColorBrush x:Key="StartButtonHoverBorderLight" Color="#222222" />
    <SolidColorBrush x:Key="StartButtonHoverBorderShadow" Color="#222222" />
    <SolidColorBrush x:Key="StartButtonHoverBackground" Color="#222222" />
    <SolidColorBrush x:Key="StartButtonPressedBorder" Color="#181818" />
    <SolidColorBrush x:Key="StartButtonPressedBorderLight" Color="#181818" />
    <SolidColorBrush x:Key="StartButtonPressedBorderShadow" Color="#181818" />
    <SolidColorBrush x:Key="StartButtonPressedBackground" Color="#181818" />

    <SolidColorBrush x:Key="ButtonForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ButtonPressedForeground" Color="#999999" />
    <SolidColorBrush x:Key="ClockForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ShowDesktopBorder" Color="#000000" />

    <SolidColorBrush x:Key="ToolTipBackground" Color="#111111" />
    <SolidColorBrush x:Key="ToolTipForeground" Color="#FFFFFF" />

    <Style TargetType="ContentControl"
           x:Key="Taskbar"
           BasedOn="{StaticResource Taskbar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderThickness="0"
                            BorderBrush="{DynamicResource ButtonBorder}"
                            Name="OuterBorder">
                        <Border BorderThickness="0"
                                BorderBrush="{DynamicResource ButtonLight}"
                                Background="{DynamicResource ButtonFace}"
                                Name="InnerBorder">
                            <ContentPresenter />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox"
           x:Key="Tray">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border BorderThickness="1"
                            BorderBrush="{DynamicResource TrayBorder}"
                            Margin="0">
                        <Border BorderThickness="0"
                                BorderBrush="{DynamicResource TrayInnerBorder}"
                                Background="{DynamicResource TrayBackground}"
                                Padding="2">
                            <ContentPresenter />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="TaskButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource ButtonFace}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ButtonForeground}" />
        <Setter Property="Margin"
                Value="0,0,3,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0"
                            Name="ButtonOuterBorder">
                        <Border BorderThickness="0,0,0,2"
                                BorderBrush="{DynamicResource ButtonInactiveBorder}"
                                Background="{TemplateBinding Background}"
                                Padding="1,2,1,0"
                                x:Name="ButtonBorder">
                            <ContentPresenter Margin="2"
                                              x:Name="Content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Left">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="2,0,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Top">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1,0,1,2" />
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="0,2,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Right">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="0,0,2,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonHoverBackground}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonPressedBackground}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonPressedBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                         Value="Vertical">
                <DataTrigger.Setters>
                    <Setter Property="Margin"
                            Value="0,0,0,3" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="TaskButtonActive"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Background"
                Value="{DynamicResource ButtonActiveBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0"
                            Name="ButtonOuterBorder">
                        <Border BorderThickness="0,0,0,2"
                            BorderBrush="{DynamicResource ButtonActiveBorder}"
                            Background="{TemplateBinding Background}"
                            Padding="1,2,1,0"
                            x:Name="ButtonBorder">
                            <ContentPresenter Margin="2"
                                              x:Name="Content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Left">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="2,0,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Top">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1,0,1,2" />
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="0,2,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Right">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="0,0,2,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonPressedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="TaskButtonFlashing"
           BasedOn="{StaticResource TaskButton}">
        <Setter Property="Background"
                Value="{DynamicResource ButtonFlashingBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0"
                            Name="ButtonOuterBorder">
                        <Border BorderThickness="0,0,0,2"
                            BorderBrush="{DynamicResource ButtonFlashingBorder}"
                            Background="{TemplateBinding Background}"
                            Padding="1,2,1,0"
                            x:Name="ButtonBorder">
                            <ContentPresenter Margin="2"
                                              x:Name="Content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Left">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="2,0,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Top">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="1,0,1,2" />
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="0,2,0,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=AppBarEdge, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Right">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="0,0,2,0" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ContentControl"
           x:Key="TaskButtonThumbnail">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderThickness="1"
                            BorderBrush="{DynamicResource ToolTipBackground}"
                            Background="{DynamicResource ToolTipBackground}"
                            Padding="4"
                            Margin="4">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BitmapImage x:Key="StartIconImage"
                 UriSource="../Resources/startflat.png" />

    <Style TargetType="Image"
           x:Key="StartIcon"
           BasedOn="{StaticResource StartIcon}">
        <Setter Property="Width"
                Value="15" />
        <Setter Property="Height"
                Value="13" />
        <Setter Property="Margin"
                Value="0" />
    </Style>

    <Style TargetType="TextBlock"
        x:Key="StartLabel"
        BasedOn="{StaticResource StartLabel}">
        <Setter Property="Text"
                Value="" />
        <Setter Property="Width"
                Value="0" />
        <Setter Property="Height"
                Value="0" />
        <Setter Property="Margin"
                Value="0" />
    </Style>

    <ToolTip x:Key="StartButtonTip" Content="{DynamicResource start_button_tip}"/>

    <Style TargetType="ToggleButton"
           x:Key="StartButton"
           BasedOn="{StaticResource StartButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent"
                            Padding="0">
                        <Border BorderThickness="0"
                                BorderBrush="{DynamicResource ButtonBorder}"
                                x:Name="ButtonBorder">
                            <Border BorderThickness="0"
                                    BorderBrush="{DynamicResource ButtonLight}"
                                    x:Name="TopLeftBorder">
                                <Border BorderThickness="0"
                                        BorderBrush="{DynamicResource ButtonShadow}"
                                        Background="{DynamicResource StartButtonBackground}"
                                        x:Name="BottomRightBorder">
                                    <ContentPresenter Margin="9,2"
                                                      x:Name="Content" />
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonHoverBorder}" />
                            <Setter TargetName="TopLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonHoverBorderLight}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonHoverBorderShadow}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource StartButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorder}" />
                            <Setter TargetName="TopLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorderShadow}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorderLight}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource StartButtonPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorder}" />
                            <Setter TargetName="TopLeftBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorderShadow}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource StartButtonPressedBorderLight}" />
                            <Setter TargetName="BottomRightBorder"
                                    Property="Background"
                                    Value="{DynamicResource StartButtonPressedBackground}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="BottomRightBorder"
                                        Property="Padding"
                                        Value="32,6" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="ToolbarButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource ButtonFace}" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent"
                            Padding="0"
                            Name="ButtonOuterBorder">
                        <Border BorderThickness="0"
                            Padding="2"
                            BorderBrush="{DynamicResource ButtonInactiveBorder}"
                            Background="{TemplateBinding Background}"
                            x:Name="ButtonBorder">
                            <ContentPresenter Margin="2"
                                              x:Name="Content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonHoverBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonPressedBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonPressedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskListScrollButton"
           TargetType="RepeatButton"
           BasedOn="{StaticResource TaskListScrollButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border BorderThickness="0"
                            BorderBrush="{DynamicResource ButtonInactiveBorder}"
                            Background="{TemplateBinding Background}"
                            x:Name="ButtonBorder">
                        <ContentPresenter HorizontalAlignment="Center"
                                          Margin="4,-4,4,-2"
                                          x:Name="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonHoverBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonPressedBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonPressedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton"
           x:Key="TrayToggleButton"
           BasedOn="{StaticResource TrayToggleButton}">
        <Setter Property="Background"
                Value="{DynamicResource TrayBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent"
                            Padding="2,0"
                            Name="ButtonOuterBorder">
                        <Border BorderThickness="0"
                            BorderBrush="{DynamicResource ButtonInactiveBorder}"
                            Background="{TemplateBinding Background}"
                            x:Name="ButtonBorder">
                            <StackPanel Orientation="Horizontal"
                                        Height="8"
                                        VerticalAlignment="Center"
                                        Margin="6,1,6,0"
                                        Name="ArrowPanel">
                                <Path Fill="{DynamicResource ButtonForeground}"
                                      Data="M 0 4 L 4 8 L 6 8 L 2 4 L 6 0 L 4 0 Z"
                                      Name="Arrow1" />
                            </StackPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="ArrowPanel"
                                        Property="RenderTransformOrigin"
                                        Value="0.5,0.5" />
                                <Setter TargetName="ArrowPanel"
                                        Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"></RotateTransform>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="ArrowPanel"
                                        Property="RenderTransformOrigin"
                                        Value="0.5,0.5" />
                                <Setter TargetName="ArrowPanel"
                                        Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"></RotateTransform>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonOuterBorder"
                                        Property="Padding"
                                        Value="0,2" />
                                <Setter TargetName="ArrowPanel"
                                        Property="HorizontalAlignment"
                                        Value="Center" />
                                <Setter TargetName="ArrowPanel"
                                        Property="Margin"
                                        Value="0,2,0,6" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonHoverBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ButtonBorder"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonPressedBorder}" />
                            <Setter TargetName="ButtonBorder"
                                    Property="Background"
                                    Value="{DynamicResource ButtonPressedBackground}" />
                            <Setter TargetName="Arrow1"
                                    Property="Fill"
                                    Value="{DynamicResource ButtonPressedForeground}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                           Value="Horizontal" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="ArrowPanel"
                                        Property="RenderTransformOrigin"
                                        Value="0.5,0.5" />
                                <Setter TargetName="ArrowPanel"
                                        Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="-1"></ScaleTransform>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Image"
           x:Key="ShowDesktopIcon">
        <Setter Property="Width"
                Value="0" />
        <Setter Property="Height"
                Value="0" />
    </Style>

    <Style TargetType="ToggleButton"
           x:Key="ShowDesktopButton">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource ButtonFace}" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="Transparent"
                            Padding="0"
                            Name="ButtonOuterBorder">
                        <Border BorderThickness="1,0,0,0"
                                BorderBrush="{DynamicResource ShowDesktopBorder}"
                                Background="{TemplateBinding Background}"
                                Padding="2"
                                x:Name="ButtonBorder">
                            <ContentPresenter Name="Content" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     Value="Vertical">
                            <DataTrigger.Setters>
                                <Setter TargetName="ButtonBorder"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                                <Setter TargetName="ButtonBorder"
                                        Property="Padding"
                                        Value="48,2" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource ButtonActiveBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource ButtonPressedBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"
                                           Value="True" />
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsPressed"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{DynamicResource ButtonHoverBackground}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
